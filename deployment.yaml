---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-broker
spec:
  selector:
    matchLabels:
      app: redis-broker
  replicas: 1
  template:
    metadata:
      labels:
        app: redis-broker
    spec:
      containers:
      - name: redis
        image: redis:alpine
        ports:
        - containerPort: 6379
        resources:
          limits:
            memory: "128Mi"
            cpu: "100m"
---
apiVersion: v1
kind: Service
metadata:
  name: broker
spec:
  selector:
    app: redis-broker
  ports:
  - port: 6379
    targetPort: 6379
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-backend
spec:
  selector:
    matchLabels:
      app: redis-backend
  replicas: 1
  template:
    metadata:
      labels:
        app: redis-backend
    spec:
      containers:
      - name: redis
        image: redis:alpine
        ports:
        - containerPort: 6379  
        resources:
          limits:
            memory: "128Mi"
            cpu: "100m"
---
apiVersion: v1
kind: Service
metadata:
  name: backend
spec:
  selector:
    app: redis-backend
  ports:
  - port: 6379          
    targetPort: 6379    
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-results
spec:
  selector:
    matchLabels:
      app: redis-results
  replicas: 1
  template:
    metadata:
      labels:
        app: redis-results
    spec:
      containers:
      - name: redis
        image: redis:alpine
        ports:
        - containerPort: 6379
        resources:
          limits:
            memory: "128Mi"
            cpu: "100m"
---
apiVersion: v1
kind: Service
metadata:
  name: results
spec:
  selector:
    app: redis-results
  ports:
  - port: 6379
    targetPort: 6379
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: analyzer-data-pv
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/data"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: analyzer-data-pvc
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: analyzer-backend
spec:
  selector:
    matchLabels:
      app: analyzer-backend
  replicas: 1
  template:
    metadata:
      labels:
        app: analyzer-backend
    spec:
      volumes:
      - name: analyzer-data
        persistentVolumeClaim:
          claimName: analyzer-data-pvc
      containers:
      - name: application
        imagePullPolicy: Never
        image: backend:latest
        env:
        - name: OLLAMA_HOST
          value: "http://host.minikube.internal:11434"
        ports:
        - containerPort: 50051
        resources:
          limits:
            memory: "256Mi"
            cpu: "200m"
        volumeMounts:
        - name: analyzer-data
          mountPath: /data
---
apiVersion: v1
kind: Service
metadata:
  name: application-grpc
spec:
  selector:
    app: analyzer-backend
  ports:
  - port: 50051
    targetPort: 50051
    name: analyzer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: analyzer-worker
spec:
  selector:
    matchLabels:
      app: analyzer-worker
  replicas: 1
  template:
    metadata:
      labels:
        app: analyzer-worker
    spec:
      volumes:
      - name: analyzer-data
        persistentVolumeClaim:
          claimName: analyzer-data-pvc
      containers:
      - name: worker
        image: worker:latest
        imagePullPolicy: Never
        env:
        - name: OLLAMA_HOST
          value: "http://host.minikube.internal:11434"
        resources:
          limits:
            memory: "1024Mi"
            cpu: "1000m"
        volumeMounts:
        - name: analyzer-data
          mountPath: /data
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: analyzer-webapi
spec:
  selector:
    matchLabels:
      app: analyzer-webapi
  replicas: 1
  template:
    metadata:
      labels:
        app: analyzer-webapi
    spec:
      volumes:
      - name: analyzer-data
        persistentVolumeClaim:
          claimName: analyzer-data-pvc
      containers:
      - name: backend
        image: api:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 8000
        resources:
          limits:
            memory: "256Mi"
            cpu: "200m"
        volumeMounts:
        - name: analyzer-data
          mountPath: /data
---
apiVersion: v1
kind: Service
metadata:
  name: analyzer-webapi
spec:
  selector:
    app: analyzer-webapi
  ports:
  - port: 80
    targetPort: 8000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: analyzer-beat
spec:
  selector:
    matchLabels:
      app: analyzer-beat
  replicas: 1
  template:
    metadata:
      labels:
        app: analyzer-beat
    spec:
      containers:
      - name: beat
        image: worker:latest
        imagePullPolicy: Never
        command: ["celery", "-A", "backend.tasks.app", "beat", "--loglevel=info"]
        resources:
          limits:
            memory: "512Mi"
            cpu: "500m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: analyzer-flower
spec:
  selector:
    matchLabels:
      app: analyzer-flower
  replicas: 1
  template:
    metadata:
      labels:
        app: analyzer-flower
    spec:
      containers:
      - name: flower
        image: worker:latest
        imagePullPolicy: Never
        command: ["celery", "-A", "backend.tasks.app", "flower"]
        env:
          - name: FLOWER_PORT
            value: "5555"
        ports:
        - containerPort: 5555
        resources:
          limits:
            memory: "256Mi"
            cpu: "200m"
---
apiVersion: v1
kind: Service
metadata:
  name: flower
spec:
  selector:
    app: analyzer-flower
  ports:
  - port: 8080
    targetPort: 5555
